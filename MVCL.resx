<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>